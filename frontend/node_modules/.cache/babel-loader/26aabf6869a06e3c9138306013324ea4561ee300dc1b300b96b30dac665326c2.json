{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS2\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// ForgotPassword.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      // Make an API request to check if the email exists\n      const response = await axios.post('http://localhost:3001/api/check-email', {\n        email\n      });\n      if (response.data.exists) {\n        // Email exists, show new password and confirm password fields\n        const newPasswordInput = prompt('Enter your new password:');\n        const confirmPasswordInput = prompt('Confirm your new password:');\n        if (newPasswordInput && confirmPasswordInput && newPasswordInput === confirmPasswordInput) {\n          // Make an API request to update the new password in the database\n          const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\n            email,\n            newPassword: newPasswordInput\n          });\n          setMessage(updateResponse.data.message);\n        } else {\n          setMessage('Passwords do not match.');\n        }\n      } else {\n        setMessage('Email not found.');\n      }\n    } catch (error) {\n      // Handle error, show error message, etc.\n      console.error('Error resetting password:', error.message);\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"Oc6nLE4/N9ZsQFXCPzr40+SGQqg=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleResetPassword","e","preventDefault","response","post","data","exists","newPasswordInput","prompt","confirmPasswordInput","updateResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS2/frontend/src/components/ForgotPassword.js"],"sourcesContent":["// ForgotPassword.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Make an API request to check if the email exists\r\n      const response = await axios.post('http://localhost:3001/api/check-email', { email });\r\n\r\n      if (response.data.exists) {\r\n        // Email exists, show new password and confirm password fields\r\n        const newPasswordInput = prompt('Enter your new password:');\r\n        const confirmPasswordInput = prompt('Confirm your new password:');\r\n\r\n        if (newPasswordInput && confirmPasswordInput && newPasswordInput === confirmPasswordInput) {\r\n          // Make an API request to update the new password in the database\r\n          const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\r\n            email,\r\n            newPassword: newPasswordInput,\r\n          });\r\n\r\n          setMessage(updateResponse.data.message);\r\n        } else {\r\n          setMessage('Passwords do not match.');\r\n        }\r\n      } else {\r\n        setMessage('Email not found.');\r\n      }\r\n    } catch (error) {\r\n      // Handle error, show error message, etc.\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n      <form onSubmit={handleResetPassword}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n      <p>{message}</p>\r\n      <Link to=\"/login\">Back to Login</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}