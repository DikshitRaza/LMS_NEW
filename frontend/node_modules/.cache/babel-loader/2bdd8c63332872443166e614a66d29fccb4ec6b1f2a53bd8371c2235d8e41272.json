{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS2\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// ForgotPassword.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\n  const handleCheckEmail = async e => {\n    e.preventDefault();\n    try {\n      // Check if the email exists\n      const emailCheckResponse = await axios.post('http://localhost:3001/api/check-email', {\n        email\n      });\n      if (emailCheckResponse.data.exists) {\n        // Email exists, show new password and confirm password fields\n        setShowPasswordFields(true);\n      } else {\n        setMessage('Email not found.');\n      }\n    } catch (error) {\n      console.error('Error checking email:', error.message);\n      setMessage('An error occurred while checking the email.');\n    }\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      // Proceed with password reset logic\n      if (newPassword === confirmPassword) {\n        // Make an API request to update the new password in the database\n        const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\n          email,\n          newPassword\n        });\n        setMessage(updateResponse.data.message);\n      } else {\n        setMessage('Passwords do not match.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error.message);\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCheckEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showPasswordFields && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"newPassword\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"OK/K9Zxhx6KkmUYeBoQdnLOPVpw=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","showPasswordFields","setShowPasswordFields","handleCheckEmail","e","preventDefault","emailCheckResponse","post","data","exists","error","console","handleResetPassword","updateResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS2/frontend/src/components/ForgotPassword.js"],"sourcesContent":["// ForgotPassword.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n\r\n  const handleCheckEmail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Check if the email exists\r\n      const emailCheckResponse = await axios.post('http://localhost:3001/api/check-email', { email });\r\n\r\n      if (emailCheckResponse.data.exists) {\r\n        // Email exists, show new password and confirm password fields\r\n        setShowPasswordFields(true);\r\n      } else {\r\n        setMessage('Email not found.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking email:', error.message);\r\n      setMessage('An error occurred while checking the email.');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Proceed with password reset logic\r\n      if (newPassword === confirmPassword) {\r\n        // Make an API request to update the new password in the database\r\n        const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\r\n          email,\r\n          newPassword,\r\n        });\r\n\r\n        setMessage(updateResponse.data.message);\r\n      } else {\r\n        setMessage('Passwords do not match.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n      <form onSubmit={handleCheckEmail}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Check Email</button>\r\n      </form>\r\n\r\n      {showPasswordFields && (\r\n        <form onSubmit={handleResetPassword}>\r\n          {/* New Password */}\r\n          <label htmlFor=\"newPassword\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n          {/* Confirm Password */}\r\n          <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n      )}\r\n\r\n      <p>{message}</p>\r\n      <Link to=\"/\">Back to Login</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}