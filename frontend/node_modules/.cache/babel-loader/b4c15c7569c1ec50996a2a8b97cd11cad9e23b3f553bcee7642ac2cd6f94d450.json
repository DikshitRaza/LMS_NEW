{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS2\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// ForgotPassword.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailExists, setEmailExists] = useState(false);\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      // Check if the email exists\n      const emailCheckResponse = await axios.post('http://localhost:3001/api/check-email', {\n        email\n      });\n      if (emailCheckResponse.data.exists) {\n        setEmailExists(true);\n      } else {\n        setMessage('Email not found.');\n        return; // Stop execution if email is not found\n      }\n\n      // Proceed with password reset logic\n      if (newPassword === confirmPassword) {\n        // Make an API request to update the new password in the database\n        const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\n          email,\n          newPassword\n        });\n        setMessage(updateResponse.data.message);\n      } else {\n        setMessage('Passwords do not match.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error.message);\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), emailExists && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"im3Rcw7DO1qA9JtRC+G9vig/6d0=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","emailExists","setEmailExists","handleResetPassword","e","preventDefault","emailCheckResponse","post","data","exists","updateResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS2/frontend/src/components/ForgotPassword.js"],"sourcesContent":["// ForgotPassword.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [emailExists, setEmailExists] = useState(false);\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Check if the email exists\r\n      const emailCheckResponse = await axios.post('http://localhost:3001/api/check-email', { email });\r\n\r\n      if (emailCheckResponse.data.exists) {\r\n        setEmailExists(true);\r\n      } else {\r\n        setMessage('Email not found.');\r\n        return; // Stop execution if email is not found\r\n      }\r\n\r\n      // Proceed with password reset logic\r\n      if (newPassword === confirmPassword) {\r\n        // Make an API request to update the new password in the database\r\n        const updateResponse = await axios.post('http://localhost:3001/api/update-password', {\r\n          email,\r\n          newPassword,\r\n        });\r\n\r\n        setMessage(updateResponse.data.message);\r\n      } else {\r\n        setMessage('Passwords do not match.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n      <form onSubmit={handleResetPassword}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        {/* Display new password and confirm password fields only if email exists */}\r\n        {emailExists && (\r\n          <>\r\n            {/* New Password */}\r\n            <label htmlFor=\"newPassword\">New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n            />\r\n            {/* Confirm Password */}\r\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </>\r\n        )}\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n      <p>{message}</p>\r\n      <Link to=\"/login\">Back to Login</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}